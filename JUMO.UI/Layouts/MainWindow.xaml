<Window x:Class="JUMO.UI.Layouts.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:JUMO.UI.Layouts"
        xmlns:proj="clr-namespace:JUMO.UI"
        xmlns:ctrl="clr-namespace:JUMO.UI.Controls"
        xmlns:view="clr-namespace:JUMO.UI.Views"
        mc:Ignorable="d"
        Background="{DynamicResource LightBackgroundColor}"
        Title="{Binding DisplayName}" Height="600" Width="900">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Skin.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="DisabledWhenCommandIsNull" TargetType="MenuItem">
                <Style.Triggers>
                    <Trigger Property="Command" Value="{x:Null}">
                        <Setter Property="IsEnabled" Value="False" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <proj:MainViewModel />
    </Window.DataContext>
    <Window.InputBindings>
        <!-- File -->
        <KeyBinding Gesture="Ctrl+O" Command="{Binding OpenProjectCommand}" />
        <KeyBinding Gesture="Ctrl+Shift+S" Command="{Binding SaveProjectAsCommand}" />

        <!-- Edit -->
        <KeyBinding Gesture="Ctrl+X" Command="{Binding CurrentWorkspace.CutCommand}" />
        <KeyBinding Gesture="Ctrl+C" Command="{Binding CurrentWorkspace.CopyCommand}" />
        <KeyBinding Gesture="Ctrl+V" Command="{Binding CurrentWorkspace.PasteCommand}" />
        <KeyBinding Gesture="Delete" Command="{Binding CurrentWorkspace.DeleteCommand}" />
    </Window.InputBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top" Background="{StaticResource LightBackgroundColor}">
            <MenuItem Header="파일(F)">
                <MenuItem Header="열기(_O)..." InputGestureText="Ctrl+O" Command="{Binding OpenProjectCommand}" />
                <MenuItem Header="다른 이름으로 저장(_A)..." InputGestureText="Ctrl+Shift+S" Command="{Binding SaveProjectAsCommand}" />
                <Separator />
                <MenuItem Header="설정" Click="MenuItem_Click" />
            </MenuItem>
            <MenuItem Header="편집(E)">
                <MenuItem Header="잘라내기(_X)" InputGestureText="Ctrl+X" Command="{Binding CurrentWorkspace.CutCommand}" Style="{StaticResource DisabledWhenCommandIsNull}" />
                <MenuItem Header="복사(_C)" InputGestureText="Ctrl+C" Command="{Binding CurrentWorkspace.CopyCommand}" Style="{StaticResource DisabledWhenCommandIsNull}" />
                <MenuItem Header="붙여넣기(_P)" InputGestureText="Ctrl+V" Command="{Binding CurrentWorkspace.PasteCommand}" Style="{StaticResource DisabledWhenCommandIsNull}" />
                <MenuItem Header="삭제(_L)" InputGestureText="Del" Command="{Binding CurrentWorkspace.DeleteCommand}" Style="{StaticResource DisabledWhenCommandIsNull}" />
            </MenuItem>
            <MenuItem Header=" 보기(V)" />
            <MenuItem Header=" 도구(T)" />
            <MenuItem Header=" 도움말(H)" />
        </Menu>
        <Grid DockPanel.Dock="Top" Margin="3">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid Grid.Row="0" Grid.Column="0" Margin="0,0,0,3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <ToggleButton Grid.Column="0" Command="{Binding TogglePlaybackModeCommand}" proj:SkinHelper.Segment="Left">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource FaceToggleButtonStyle2}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Sequencer.Mode}" Value="Pattern">
                                    <Setter Property="Content" Value="패턴" />
                                    <Setter Property="IsChecked" Value="True" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Sequencer.Mode}" Value="Song">
                                    <Setter Property="Content" Value="곡" />
                                    <Setter Property="IsChecked" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <ToggleButton Style="{StaticResource FaceToggleButtonStyle1}" Grid.Column="1" Content="▶" IsChecked="{Binding Sequencer.IsPlaying, Mode=OneWay}" Command="{Binding TogglePlaybackCommand}" proj:SkinHelper.Segment="Right" />
                <ctrl:NumericUpDown Grid.Column="2" Margin="3" Minimum="20" Maximum="500" Value="{Binding Song.Tempo}" />
            </Grid>

            <Slider Grid.Row="1" Grid.Column="0" Width="160" Minimum="0" Value="{Binding Sequencer.Position, Mode=TwoWay}" VerticalAlignment="Center">
                <Slider.Style>
                    <Style TargetType="Slider" BasedOn="{StaticResource {x:Type Slider}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Sequencer.Mode}" Value="Pattern">
                                <Setter Property="Maximum" Value="{Binding Song.CurrentPattern.Length}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Sequencer.Mode}" Value="Song">
                                <Setter Property="Maximum" Value="{Binding Song.Length}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Slider.Style>
            </Slider>

            <Grid Grid.Column="1" Grid.RowSpan="2" Margin="3">
                <Rectangle x:Name="playbackTimeViewMask" RadiusX="10" RadiusY="2147483647" Fill="{StaticResource LightBackgroundColor}" />
                <ContentControl>
                    <ContentControl.OpacityMask>
                        <VisualBrush Visual="{Binding ElementName=playbackTimeViewMask}" />
                    </ContentControl.OpacityMask>
                    <ContentControl.ContentTemplate>
                        <DataTemplate DataType="{x:Type proj:PlaybackTimeViewModel}">
                            <view:PlaybackTimeView Background="{StaticResource DarkBackgroundColor}" Foreground="{StaticResource DarkPrimaryTextColor}" SecondaryForeground="{StaticResource DarkSecondaryTextColor}" />
                        </DataTemplate>
                    </ContentControl.ContentTemplate>
                    <proj:PlaybackTimeViewModel />
                </ContentControl>
            </Grid>

            <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal">
                <StackPanel.DataContext>
                    <proj:PatternManagerViewModel />
                </StackPanel.DataContext>
                <StackPanel.Resources>
                    <proj:BindingProxy x:Key="Proxy" Data="{Binding}" />
                </StackPanel.Resources>
                <ComboBox Width="100"
                          proj:SkinHelper.Segment="Left"
                          ItemsSource="{Binding Song.Patterns}"
                          SelectedItem="{Binding Song.CurrentPattern}"
                          DisplayMemberPath="Name">
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ComboBoxItem}">
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Name}" IsEnabled="False" />
                                        <Separator />
                                        <MenuItem Header="위로 이동(_U)" Command="{Binding Data.MoveUpCommand, Source={StaticResource Proxy}}" CommandParameter="{Binding}" />
                                        <MenuItem Header="아래로 이동(_N)" Command="{Binding Data.MoveDownCommand, Source={StaticResource Proxy}}" CommandParameter="{Binding}" />
                                        <MenuItem Header="이름 바꾸기(_R)" Command="{Binding Data.OpenRenameCommand, Source={StaticResource Proxy}}" CommandParameter="{Binding}" />
                                        <MenuItem Header="패턴 삭제(_D)" Command="{Binding Data.RemovePatternCommand, Source={StaticResource Proxy}}" CommandParameter="{Binding}" />
                                        <Separator />
                                        <MenuItem Header="패턴 추가(_A)" Command="{Binding Data.OpenAddCommand, Source={StaticResource Proxy}}" />
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>
                <Button x:Name="addPatternButton" Content="+" Command="{Binding OpenAddCommand}" proj:SkinHelper.Segment="Right" />
                <Popup IsOpen="{Binding IsPopupVisible, Mode=TwoWay}" StaysOpen="False" PlacementTarget="{Binding ElementName=addPatternButton}" Placement="Bottom" HorizontalOffset="6" VerticalOffset="6">
                    <Border Padding="{StaticResource ControlMargin}"
                            Background="{StaticResource LightControlFaceColor}"
                            BorderBrush="{StaticResource LightControlBorderColor}" BorderThickness="1"
                            SnapsToDevicePixels="True">
                        <StackPanel Orientation="Horizontal">
                            <Label Content="패턴 이름:" VerticalAlignment="Center" />
                            <TextBox Width="200" Text="{Binding CurrentName}" proj:SkinHelper.Segment="Left" />
                            <Button proj:SkinHelper.Segment="Center">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding CurrentStatus}" Value="Adding">
                                                <Setter Property="Command" Value="{Binding AddPatternCommand}" />
                                                <Setter Property="Content" Value="추가" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding CurrentStatus}" Value="Renaming">
                                                <Setter Property="Command" Value="{Binding RenamePatternCommand}" />
                                                <Setter Property="Content" Value="변경" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button Content="취소" Command="{Binding CloseCommand}" proj:SkinHelper.Segment="Right" />
                        </StackPanel>
                    </Border>
                </Popup>
            </StackPanel>

            <StackPanel Grid.Row="1" Grid.Column="2" Orientation="Horizontal">
                <Button Content="MX" Click="Mixer_Click"  proj:SkinHelper.Segment="Left" />
                <Button Content="PL" Command="{Binding OpenPlaylistCommand}" proj:SkinHelper.Segment="Right" />
            </StackPanel>
        </Grid>
        <Border Padding="{StaticResource ControlMargin}" Background="{StaticResource LightControlFaceColor}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <TabControl Grid.Column="0" Margin="{StaticResource ControlMargin}">
                    <TabItem Header="{Binding Song.CurrentPattern.Name}">
                        <ContentControl>
                            <proj:ChannelRackViewModel />
                        </ContentControl>
                    </TabItem>
                </TabControl>
                <TabControl Grid.Column="1" Margin="{StaticResource ControlMargin}" ItemsSource="{Binding Workspaces}" SelectedItem="{Binding CurrentWorkspace, Mode=TwoWay}">
                    <TabControl.ItemTemplate>
                        <DataTemplate>
                            <DockPanel>
                                <Button DockPanel.Dock="Right" Style="{StaticResource CloseTabButtonStyle}" Command="{Binding CloseCommand}" />
                                <TextBlock Text="{Binding DisplayName}" />
                            </DockPanel>
                        </DataTemplate>
                    </TabControl.ItemTemplate>
                </TabControl>
            </Grid>
        </Border>
    </DockPanel>
</Window>
