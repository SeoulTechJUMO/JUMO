<Window x:Class="JUMO.UI.Layouts.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:JUMO.UI.Layouts"
        xmlns:proj="clr-namespace:JUMO.UI"
        xmlns:ctrl="clr-namespace:JUMO.UI.Controls"
        xmlns:view="clr-namespace:JUMO.UI.Views"
        mc:Ignorable="d"
        Background="{DynamicResource LightBackgroundColor}"
        Title="{Binding DisplayName}" Height="600" Width="900">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Skin.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate DataType="{x:Type proj:ChannelRackViewModel}">
                <view:ChannelRackView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type proj:PianoRollViewModel}">
                <view:PianoRollView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type proj:PlaylistViewModel}">
                <view:PlaylistView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type proj:PatternManagerViewModel}">
                <view:PatternManagerView />
            </DataTemplate>

            <Style x:Key="DisabledWhenCommandIsNull" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                <Style.Triggers>
                    <Trigger Property="Command" Value="{x:Null}">
                        <Setter Property="IsEnabled" Value="False" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <proj:MainViewModel />
    </Window.DataContext>
    <Window.InputBindings>
        <!-- File -->
        <KeyBinding Gesture="Ctrl+O" Command="{Binding OpenProjectCommand}" />
        <KeyBinding Gesture="Ctrl+S" Command="{Binding SaveProjectCommand}" />
        <KeyBinding Gesture="Ctrl+Shift+S" Command="{Binding SaveProjectAsCommand}" />

        <!-- Edit -->
        <KeyBinding Gesture="Ctrl+X" Command="{Binding CurrentWorkspace.CutCommand}" />
        <KeyBinding Gesture="Ctrl+C" Command="{Binding CurrentWorkspace.CopyCommand}" />
        <KeyBinding Gesture="Ctrl+V" Command="{Binding CurrentWorkspace.PasteCommand}" />
        <KeyBinding Gesture="Delete" Command="{Binding CurrentWorkspace.DeleteCommand}" />
        <KeyBinding Gesture="Ctrl+A" Command="{Binding CurrentWorkspace.SelectAllCommand}" />
    </Window.InputBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top" Background="{StaticResource LightBackgroundColor}">
            <MenuItem Header="파일(F)">
                <MenuItem Header="열기(_O)..." InputGestureText="Ctrl+O" Command="{Binding OpenProjectCommand}" />
                <MenuItem Header="저장(_S)" InputGestureText="Ctrl+S" Command="{Binding SaveProjectCommand}" />
                <MenuItem Header="다른 이름으로 저장(_A)..." InputGestureText="Ctrl+Shift+S" Command="{Binding SaveProjectAsCommand}" />
                <Separator />
                <MenuItem Header="설정" Click="MenuItem_Click" />
            </MenuItem>
            <MenuItem Header="편집(E)">
                <MenuItem Header="잘라내기(_X)" InputGestureText="Ctrl+X" Command="{Binding CurrentWorkspace.CutCommand}" Style="{StaticResource DisabledWhenCommandIsNull}" />
                <MenuItem Header="복사(_C)" InputGestureText="Ctrl+C" Command="{Binding CurrentWorkspace.CopyCommand}" Style="{StaticResource DisabledWhenCommandIsNull}" />
                <MenuItem Header="붙여넣기(_P)" InputGestureText="Ctrl+V" Command="{Binding CurrentWorkspace.PasteCommand}" Style="{StaticResource DisabledWhenCommandIsNull}" />
                <MenuItem Header="삭제(_L)" InputGestureText="Del" Command="{Binding CurrentWorkspace.DeleteCommand}" Style="{StaticResource DisabledWhenCommandIsNull}" />
                <Separator />
                <MenuItem Header="모두 선택(_A)" InputGestureText="Ctrl+A" Command="{Binding CurrentWorkspace.SelectAllCommand}" Style="{StaticResource DisabledWhenCommandIsNull}" />
            </MenuItem>
            <MenuItem Header="보기(V)" />
            <MenuItem Header="도구(T)" />
            <MenuItem Header="도움말(H)" />
        </Menu>
        <Grid DockPanel.Dock="Top" Margin="3">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid Grid.Row="0" Grid.Column="0" Margin="0,0,0,3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <ToggleButton Grid.Column="0" Command="{Binding TogglePlaybackModeCommand}" proj:SkinHelper.Segment="Left">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource FaceToggleButtonStyle2}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Sequencer.Mode}" Value="Pattern">
                                    <Setter Property="Content" Value="패턴" />
                                    <Setter Property="IsChecked" Value="True" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Sequencer.Mode}" Value="Song">
                                    <Setter Property="Content" Value="곡" />
                                    <Setter Property="IsChecked" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <ToggleButton Style="{StaticResource FaceToggleButtonStyle1}" Grid.Column="1" Content="▶" IsChecked="{Binding Sequencer.IsPlaying, Mode=OneWay}" Command="{Binding TogglePlaybackCommand}" proj:SkinHelper.Segment="Right" />
                <ctrl:NumericUpDown Grid.Column="2" Margin="3" Minimum="20" Maximum="500" Value="{Binding Song.Tempo}" />
            </Grid>

            <Slider Grid.Row="1" Grid.Column="0" Width="160" Minimum="0" Value="{Binding Sequencer.Position, Mode=TwoWay}" VerticalAlignment="Center">
                <Slider.Style>
                    <Style TargetType="Slider" BasedOn="{StaticResource {x:Type Slider}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Sequencer.Mode}" Value="Pattern">
                                <Setter Property="Maximum" Value="{Binding Song.CurrentPattern.Length}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Sequencer.Mode}" Value="Song">
                                <Setter Property="Maximum" Value="{Binding Song.Length}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Slider.Style>
            </Slider>

            <Grid Grid.Column="1" Grid.RowSpan="2" Margin="3">
                <Rectangle x:Name="playbackTimeViewMask" RadiusX="10" RadiusY="2147483647" Fill="{StaticResource LightBackgroundColor}" />
                <ContentControl>
                    <ContentControl.OpacityMask>
                        <VisualBrush Visual="{Binding ElementName=playbackTimeViewMask}" />
                    </ContentControl.OpacityMask>
                    <ContentControl.ContentTemplate>
                        <DataTemplate DataType="{x:Type proj:PlaybackTimeViewModel}">
                            <view:PlaybackTimeView Background="{StaticResource DarkBackgroundColor}" Foreground="{StaticResource DarkPrimaryTextColor}" SecondaryForeground="{StaticResource DarkSecondaryTextColor}" />
                        </DataTemplate>
                    </ContentControl.ContentTemplate>
                    <proj:PlaybackTimeViewModel />
                </ContentControl>
            </Grid>

            <ContentControl Grid.Row="0" Grid.Column="2">
                <proj:PatternManagerViewModel />
            </ContentControl>

            <StackPanel Grid.Row="1" Grid.Column="2" Orientation="Horizontal">
                <Button Content="MX" Click="Mixer_Click"  proj:SkinHelper.Segment="Left" />
                <Button Content="PL" Command="{Binding OpenPlaylistCommand}" proj:SkinHelper.Segment="Right" />
            </StackPanel>
        </Grid>
        <Border Padding="{StaticResource ControlMargin}" Background="{StaticResource LightControlFaceColor}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <TabControl Grid.Column="0" Margin="{StaticResource ControlMargin}">
                    <TabItem Header="{Binding Song.CurrentPattern.Name}">
                        <ContentControl>
                            <proj:ChannelRackViewModel />
                        </ContentControl>
                    </TabItem>
                </TabControl>
                <TabControl Grid.Column="1" Margin="{StaticResource ControlMargin}" ItemsSource="{Binding Workspaces}" SelectedItem="{Binding CurrentWorkspace, Mode=TwoWay}">
                    <TabControl.ItemTemplate>
                        <DataTemplate>
                            <DockPanel>
                                <Button DockPanel.Dock="Right" Style="{StaticResource CloseTabButtonStyle}" Command="{Binding CloseCommand}" />
                                <TextBlock Text="{Binding DisplayName}" />
                            </DockPanel>
                        </DataTemplate>
                    </TabControl.ItemTemplate>
                </TabControl>
            </Grid>
        </Border>
    </DockPanel>
</Window>
