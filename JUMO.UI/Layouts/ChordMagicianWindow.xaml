<Window x:Class="JUMO.UI.Layouts.ChordMagicianWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ChordMagicianModel;assembly=ChordMagicianModel"
        xmlns:proj="clr-namespace:JUMO.UI"
        xmlns:ctrl="clr-namespace:JUMO.UI.Controls"
        Background="{DynamicResource LightBackgroundColor}"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=proj:ChordMagicianViewModel}"
        x:Name="window"
        Loaded="OnLoaded"
        Title="코드 마법사" Height="580" Width="550" ResizeMode="NoResize">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Skin.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="ElementDisabledWhenBusy" TargetType="FrameworkElement">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsClientBusy}" Value="True">
                        <Setter Property="IsEnabled" Value="False" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ButtonDisabledWhenBusy" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsClientBusy}" Value="True">
                        <Setter Property="IsEnabled" Value="False" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ListDisabledWhenBusy" TargetType="ListBox" BasedOn="{StaticResource ElementDisabledWhenBusy}" />

            <Style TargetType="Label">
                <Setter Property="Padding" Value="{StaticResource ControlMargin}" />
                <Setter Property="Foreground" Value="{StaticResource LightPrimaryTextColor}" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <DockPanel>
        <DockPanel DockPanel.Dock="Bottom" Margin="{StaticResource ControlMargin}">
            <Button DockPanel.Dock="Left" Content="스마트 멜로디 생성" Click="SmartMelodyClick"/>
            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Content="확인(_O)" Click="InsertButtonClick" Command="{Binding InsertToPianorollCommand}" Style="{StaticResource DialogButtonStyle}"/>
                <Button Content="취소(_C)" Click="ExitButtonClick" Style="{StaticResource DialogButtonStyle}"/>
            </StackPanel>
        </DockPanel>

        <Border Padding="{StaticResource ControlMargin}" Background="{StaticResource LightControlFaceColor}">
            <StackPanel>
                <Border Margin="{StaticResource ControlMargin}" Padding="{StaticResource ControlMargin}" Background="{StaticResource LightBackgroundColor}" BorderBrush="{StaticResource LightControlBorderColor}" BorderThickness="1">
                    <DockPanel>
                        <Label DockPanel.Dock="Left" VerticalAlignment="Center">
                            <TextBlock>
                            <Run>선택한 패턴: </Run>
                            <Run Text="{Binding ViewModel.Plugin.Name}" />
                            </TextBlock>
                        </Label>
                        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Label Content="현재 조성:" VerticalAlignment="Center" />
                            <ComboBox Margin="{StaticResource ControlMargin}" Width="50" Height="20" ItemsSource="{x:Static local:Naming.NoteName}" SelectedValuePath="Key" SelectedValue="{Binding Key}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Key}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <ComboBox Margin="{StaticResource ControlMargin}" Width="70" Height="20" ItemsSource="{x:Static local:Naming.ShowMode}" SelectedValuePath="Key" SelectedValue="{Binding Mode}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Key}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>
                    </DockPanel>
                </Border>

                <TabControl Margin="{StaticResource ControlMargin}">
                    <TabItem Header="현재 코드 진행">
                        <StackPanel Margin="{StaticResource ControlMargin}">
                            <StackPanel Orientation="Horizontal">
                                <Label Content="옥타브:" VerticalAlignment="Center"/>
                                <ctrl:NumericUpDown Width="50" Minimum="0" Maximum="9" Value="{Binding Octave}" />
                            </StackPanel>
                            <ListBox x:Name="SelectedChords"
                                     ItemsSource="{Binding CurrentProgress}"
                                     Margin="{StaticResource ControlMargin}"
                                     Height="100" Background="Azure"
                                     SelectedItem="{Binding CurrentChord, Mode=TwoWay}"
                                     Style="{StaticResource ListDisabledWhenBusy}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Button Content="{Binding}" Width="60" Height="75" Command="{Binding DataContext.PlayChordCommand, ElementName=window}" CommandParameter="{Binding}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Width="500" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>
                            <DockPanel>
                                <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                                    <Button Content="재생" Command="{Binding PlaySelectedChordCommand}" proj:SkinHelper.Segment="Left"/>
                                    <Button Content="정지" Command="{Binding StopCommand}" proj:SkinHelper.Segment="Right"/>
                                </StackPanel>
                                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right">
                                    <Button Content="삭제" Command="{Binding RemoveCommand}" CommandParameter="{Binding SelectedItem, ElementName=SelectedChords}" Style="{StaticResource ButtonDisabledWhenBusy}" />
                                    <Button Content="리셋" HorizontalAlignment="Right" Command="{Binding ResetCommand}" Style="{StaticResource ButtonDisabledWhenBusy}" />
                                </StackPanel>
                            </DockPanel>
                        </StackPanel>
                    </TabItem>
                </TabControl>

                <TabControl Margin="{StaticResource ControlMargin}">
                    <TabItem Header="코드 추천 리스트">
                        <StackPanel Margin="{StaticResource ControlMargin}">
                            <Label HorizontalContentAlignment="Center">
                                <TextBlock TextAlignment="Center">
                                    위의 코드 진행을 바탕으로 다음 코드를 찾았습니다.<LineBreak />
                                    코드 버튼을 클릭하면 미리 들을 수 있습니다.
                                </TextBlock>
                            </Label>
                            <ListBox x:Name="chord_list"
                                     Margin="{StaticResource ControlMargin}"
                                     ItemsSource="{Binding Progress}"
                                     SelectedItem="{Binding CurrentChord, Mode=TwoWay}"
                                     Style="{StaticResource ListDisabledWhenBusy}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Button Content="{Binding}" Width="60" Height="75" Command="{Binding DataContext.PlayChordCommand, ElementName=window}" CommandParameter="{Binding}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel Width="500" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>
                            <Button Content="진행삽입" HorizontalAlignment="Right" Command="{Binding InsertProgressCommand}" CommandParameter="{Binding SelectedItem, ElementName=chord_list}" Style="{StaticResource ButtonDisabledWhenBusy}" />
                        </StackPanel>
                    </TabItem>
                </TabControl>

                <Label HorizontalContentAlignment="Center" Foreground="{StaticResource LightSecondaryTextColor}">
                    <TextBlock TextAlignment="Center">
                        <LineBreak />
                        Hooktheory에서 제공하는 서비스입니다.<LineBreak />
                        © Hooktheory, LLC 2018
                    </TextBlock>
                </Label>
            </StackPanel>
        </Border>
    </DockPanel>
</Window>
